<?php

declare(strict_types=1);

namespace App\Policies;

use App\Models\Post;
use App\Models\User;
use Illuminate\Auth\Access\Response;

/**
 * Политика доступа для постов
 * 
 * Определяет права пользователей на выполнение различных действий
 * с постами: просмотр, создание, редактирование, удаление.
 */
final class PostPolicy
{
    /**
     * Определить, может ли пользователь просматривать любые модели
     * 
     * Все пользователи (включая гостей) могут просматривать список опубликованных постов
     */
    public function viewAny(?User $user): bool
    {
        return true;
    }

    /**
     * Определить, может ли пользователь просматривать модель
     * 
     * Пользователь может просматривать пост если:
     * - Пост опубликован (доступно всем, включая гостей), ИЛИ
     * - Пользователь аутентифицирован И является автором поста, ИЛИ
     * - Пользователь аутентифицирован И является администратором
     */
    public function view(?User $user, Post $post): bool
    {
        // Опубликованные посты доступны всем (включая гостей)
        if ($post->status === 'published') {
            return true;
        }

        // Для неопубликованных постов требуется аутентификация
        if (!$user) {
            return false;
        }

        // Автор поста или администратор могут просматривать любые посты
        return $user->id === $post->user_id || $user->isAdmin();
    }

    /**
     * Определить, может ли пользователь создавать модели
     * 
     * Все аутентифицированные пользователи могут создавать посты
     */
    public function create(User $user): bool
    {
        return true;
    }

    /**
     * Определить, может ли пользователь обновлять модель
     * 
     * Пользователь может редактировать пост если:
     * - Он является автором поста, ИЛИ
     * - Он является администратором
     */
    public function update(User $user, Post $post): bool
    {
        return $user->id === $post->user_id || $user->isAdmin();
    }

    /**
     * Определить, может ли пользователь удалять модель
     * 
     * Пользователь может удалять пост если:
     * - Он является автором поста, ИЛИ
     * - Он является администратором
     */
    public function delete(User $user, Post $post): bool
    {
        return $user->id === $post->user_id || $user->isAdmin();
    }

    /**
     * Определить, может ли пользователь восстанавливать модель
     * 
     * Только администраторы могут восстанавливать удаленные посты
     */
    public function restore(User $user, Post $post): bool
    {
        return $user->isAdmin();
    }

    /**
     * Определить, может ли пользователь окончательно удалять модель
     * 
     * Только администраторы могут окончательно удалять посты
     */
    public function forceDelete(User $user, Post $post): bool
    {
        return $user->isAdmin();
    }
}
