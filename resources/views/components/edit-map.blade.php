@props(['post'])

<div class="card mb-4">
    <div class="card-body">
        <h5 class="mb-3"><i class="fas fa-map-marked-alt me-2"></i>–ö–∞—Ä—Ç–∞</h5>
        
        <!-- Loader –¥–ª—è –∫–∞—Ä—Ç—ã -->
        <div id="edit-map-loader-{{ $post->id }}" class="text-center py-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã...</span>
            </div>
            <p class="mt-2 text-muted">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã...</p>
        </div>
        
        <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç—ã -->
        <div id="edit-map-{{ $post->id }}" style="width:100%;height:360px;border-radius:12px;overflow:hidden;display:none;"></div>
        
        <!-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã -->
        <div id="edit-map-error-{{ $post->id }}" class="alert alert-warning" style="display:none;">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã</strong><br>
            <small>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É. –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ.</small>
        </div>
        
        <div class="small text-muted mt-2">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –º–µ—Ç–∫—É –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.</div>
    </div>
</div>

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('üó∫Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–∞ {{ $post->id }}');
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    let editMap{{ $post->id }};
    let editMapLoadTimeout{{ $post->id }};
    
    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
    function showEditMapError{{ $post->id }}() {
        document.getElementById('edit-map-loader-{{ $post->id }}').style.display = 'none';
        document.getElementById('edit-map-error-{{ $post->id }}').style.display = 'block';
    }
    
    // –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –ª–æ–∞–¥–µ—Ä–∞ –∏ –ø–æ–∫–∞–∑–∞ –∫–∞—Ä—Ç—ã
    function showEditMap{{ $post->id }}() {
        document.getElementById('edit-map-loader-{{ $post->id }}').style.display = 'none';
        document.getElementById('edit-map-{{ $post->id }}').style.display = 'block';
    }
    
    function initEditMap{{ $post->id }}() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const container = document.getElementById('edit-map-{{ $post->id }}');
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä edit-map-{{ $post->id }} –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            showEditMapError{{ $post->id }}();
            return;
        }
        
        console.log('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã (10 —Å–µ–∫—É–Ω–¥)
        editMapLoadTimeout{{ $post->id }} = setTimeout(function() {
            console.error('‚è∞ –¢–∞–π–º–∞—É—Ç –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
            showEditMapError{{ $post->id }}();
        }, 10000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
        if (typeof ymaps === 'undefined') {
            console.error('‚ùå API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
            showEditMapError{{ $post->id }}();
            return;
        }
        
        console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
        
        try {
            ymaps.ready(function(){
                console.log('üó∫Ô∏è ymaps.ready() –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
                try {
                    const lat = parseFloat(document.getElementById('latitude').value) || {{ $post->latitude ?? 61.787 }};
                    const lng = parseFloat(document.getElementById('longitude').value) || {{ $post->longitude ?? 34.364 }};
                    
                    console.log('üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', lat, lng);
                    
                    editMap{{ $post->id }} = new ymaps.Map('edit-map-{{ $post->id }}', { 
                        center: [lat, lng], 
                        zoom: 14, 
                        controls: ['zoomControl','fullscreenControl', 'typeSelector'] 
                    });
                    
                    console.log('‚úÖ –ö–∞—Ä—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }} —Å–æ–∑–¥–∞–Ω–∞');
                    
                    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
                    editMap{{ $post->id }}.events.add('ready', function() {
                        console.log('üéâ –ö–∞—Ä—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }} –≥–æ—Ç–æ–≤–∞!');
                        clearTimeout(editMapLoadTimeout{{ $post->id }});
                        showEditMap{{ $post->id }}();
                    });
                    
                    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∫–∞–∑ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(function() {
                        if (editMap{{ $post->id }}) {
                            console.log('‚è∞ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
                            clearTimeout(editMapLoadTimeout{{ $post->id }});
                            showEditMap{{ $post->id }}();
                        }
                    }, 3000);
                    
                    var marker = new ymaps.Placemark([lat, lng], {}, { 
                        draggable: true, 
                        preset: 'islands#redIcon' 
                    });
                    editMap{{ $post->id }}.geoObjects.add(marker);
                    
                    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –º–µ—Ç–∫–∏
                    marker.events.add('dragend', function(){ 
                        const coords = marker.geometry.getCoordinates();
                        document.getElementById('latitude').value = coords[0].toFixed(8);
                        document.getElementById('longitude').value = coords[1].toFixed(8);
                        console.log('üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', coords[0].toFixed(8), coords[1].toFixed(8));
                    });
                    
                    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –ø—Ä–∏ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏
                    window.updateEditMap{{ $post->id }} = function(coords) {
                        if (editMap{{ $post->id }} && marker) {
                            editMap{{ $post->id }}.setCenter(coords, 14);
                            marker.geometry.setCoordinates(coords);
                            console.log('üó∫Ô∏è –ö–∞—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—é:', coords);
                        }
                    };
                    
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
                    clearTimeout(editMapLoadTimeout{{ $post->id }});
                    showEditMapError{{ $post->id }}();
                }
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ymaps –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            clearTimeout(editMapLoadTimeout{{ $post->id }});
            showEditMapError{{ $post->id }}();
        }
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ API –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
    if (typeof window.loadYandexMaps === 'function') {
        console.log('üì° –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ API –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
        window.loadYandexMaps(function() {
            ymaps.ready(function() {
                initEditMap{{ $post->id }}();
            });
        });
    } else if (typeof ymaps !== 'undefined') {
        console.log('‚úÖ API —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
        ymaps.ready(function() {
            initEditMap{{ $post->id }}();
        });
    } else {
        // Fallback - –ø—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ API
        console.log('‚ö†Ô∏è Fallback –∑–∞–≥—Ä—É–∑–∫–∞ API –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
        const script = document.createElement('script');
        const apiKey = window.yandexMapsKey || '{{ config("services.yandex.maps_key") }}';
        
        if (apiKey) {
            script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;
        } else {
            script.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU';
            console.warn('‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–∞—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
        }
        
        script.onload = function() {
            console.log('‚úÖ API –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
            ymaps.ready(function() {
                initEditMap{{ $post->id }}();
            });
        };
        
        script.onerror = function() {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è {{ $post->id }}');
            showEditMapError{{ $post->id }}();
        };
        
        document.head.appendChild(script);
    }
});
</script>
@endpush
