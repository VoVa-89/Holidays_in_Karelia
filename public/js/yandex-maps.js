// –ì–ª–æ–±–∞–ª—å–Ω—ã–π JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞–º–∏
document.addEventListener('DOMContentLoaded', function () {
    console.log('üó∫Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Yandex Maps JS');

    // –ó–∞–≥—Ä—É–∑–∫–∞ API –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç
    function loadYandexMaps(callback) {
        if (typeof ymaps !== 'undefined') {
            console.log('‚úÖ ymaps —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            if (callback) callback();
            return;
        }

        console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ–º API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç...');
        const script = document.createElement('script');
        script.src = `https://api-maps.yandex.ru/2.1/?apikey=${window.yandexMapsKey}&lang=ru_RU`;

        script.onload = function () {
            console.log('‚úÖ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
            if (callback) callback();
        };

        script.onerror = function () {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç');
        };

        document.head.appendChild(script);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –¥–ª—è –ø—Ä–µ–≤—å—é –≤ —Ñ–æ—Ä–º–∞—Ö
    let previewMap = null;
    let previewPlacemark = null;

    function initPreviewMap() {
        const mapContainer = document.getElementById('map-preview');
        if (!mapContainer) return;

        const latitude = parseFloat(document.getElementById('latitude').value) || 61.7850;
        const longitude = parseFloat(document.getElementById('longitude').value) || 34.3466;

        previewMap = new ymaps.Map('map-preview', {
            center: [latitude, longitude],
            zoom: 10,
            controls: ['zoomControl', 'typeSelector']
        });

        if (!isNaN(latitude) && !isNaN(longitude)) {
            previewPlacemark = new ymaps.Placemark([latitude, longitude], {}, {
                draggable: true,
                preset: 'islands#redIcon'
            });
            previewMap.geoObjects.add(previewPlacemark);

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ—Ç–∫–∏
            previewPlacemark.events.add('dragend', function () {
                const coords = previewPlacemark.geometry.getCoordinates();
                document.getElementById('latitude').value = coords[0].toFixed(8);
                document.getElementById('longitude').value = coords[1].toFixed(8);

                // –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
                ymaps.geocode(coords).then(function (res) {
                    const firstGeoObject = res.geoObjects.get(0);
                    if (firstGeoObject) {
                        document.getElementById('address').value = firstGeoObject.getAddressLine();
                    }
                });
            });
        }

        mapContainer.style.display = 'block';
    }

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–π—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç–µ"
    const findOnMapBtn = document.getElementById('find-on-map');
    if (findOnMapBtn) {
        findOnMapBtn.addEventListener('click', function () {
            loadYandexMaps(function () {
                ymaps.ready(function () {
                    initPreviewMap();

                    const address = document.getElementById('address').value;
                    if (address) {
                        ymaps.geocode(address).then(function (res) {
                            const firstGeoObject = res.geoObjects.get(0);
                            if (firstGeoObject) {
                                const coords = firstGeoObject.geometry.getCoordinates();
                                previewMap.setCenter(coords, 15);

                                if (previewPlacemark) {
                                    previewMap.geoObjects.remove(previewPlacemark);
                                }

                                previewPlacemark = new ymaps.Placemark(coords, {}, {
                                    draggable: true,
                                    preset: 'islands#redIcon'
                                });
                                previewMap.geoObjects.add(previewPlacemark);

                                document.getElementById('latitude').value = coords[0].toFixed(8);
                                document.getElementById('longitude').value = coords[1].toFixed(8);
                            }
                        });
                    }
                });
            });
        });
    }

    // –ö–Ω–æ–ø–∫–∞ "–¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
    const getCurrentLocationBtn = document.getElementById('get-current-location');
    if (getCurrentLocationBtn) {
        getCurrentLocationBtn.addEventListener('click', function () {
            if (!navigator.geolocation) {
                alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º');
                return;
            }

            navigator.geolocation.getCurrentPosition(function (position) {
                const latitude = position.coords.latitude;
                const longitude = position.coords.longitude;

                document.getElementById('latitude').value = latitude.toFixed(8);
                document.getElementById('longitude').value = longitude.toFixed(8);

                loadYandexMaps(function () {
                    ymaps.ready(function () {
                        initPreviewMap();
                        previewMap.setCenter([latitude, longitude], 15);

                        if (previewPlacemark) {
                            previewMap.geoObjects.remove(previewPlacemark);
                        }

                        previewPlacemark = new ymaps.Placemark([latitude, longitude], {}, {
                            draggable: true,
                            preset: 'islands#redIcon'
                        });
                        previewMap.geoObjects.add(previewPlacemark);

                        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
                        ymaps.geocode([latitude, longitude]).then(function (res) {
                            const firstGeoObject = res.geoObjects.get(0);
                            if (firstGeoObject) {
                                document.getElementById('address').value = firstGeoObject.getAddressLine();
                            }
                        });
                    });
                });
            }, function (error) {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ' + error.message);
            });
        });
    }

    // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø—Ä–∏ –≤–≤–æ–¥–µ –∞–¥—Ä–µ—Å–∞
    const addressInput = document.getElementById('address');
    if (addressInput) {
        let geocodeTimeout;
        addressInput.addEventListener('input', function () {
            clearTimeout(geocodeTimeout);
            const address = this.value;

            if (address && address.length > 5) {
                geocodeTimeout = setTimeout(() => {
                    loadYandexMaps(function () {
                        ymaps.ready(function () {
                            ymaps.geocode(address).then(function (res) {
                                const firstGeoObject = res.geoObjects.get(0);
                                if (firstGeoObject) {
                                    const coords = firstGeoObject.geometry.getCoordinates();
                                    document.getElementById('latitude').value = coords[0].toFixed(8);
                                    document.getElementById('longitude').value = coords[1].toFixed(8);

                                    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                                    document.getElementById('address').value = firstGeoObject.getAddressLine();
                                }
                            });
                        });
                    });
                }, 1000);
            }
        });
    }

    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
    window.loadYandexMaps = loadYandexMaps;
});
